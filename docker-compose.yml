services:
  api:
    container_name: api
    build: .
    command: ["--host", "${APP_HOST}", "--port", "8000"]
    expose:
      - "8000"
    environment:
      - APP_ENV=${APP_ENV}
      - SECRET_KEY=${SECRET_KEY}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - ACCESS_TOKEN_MINUTES=${ACCESS_TOKEN_MINUTES}
      - REFRESH_TOKEN_DAYS=${REFRESH_TOKEN_DAYS}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    depends_on:
      - db

  traefik:
    image: "traefik:v3.0"
    container_name: traefik
    command:
      - "--api.dashboard=true"
      - "--providers.docker=true"
      - "--entrypoint.web.address=:80"
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - aegis
    depends_on:
      - api
  
  db:
    image: postgres:16
    container_name: db
    ports:
      - "${HOST_DB_PORT}:5432"
    volumes:
      - aegis_pgdata:/var/lib.postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
    networks:
      - aegis

volumes:
  aegis_pgdata:

networks:
  aegis:
